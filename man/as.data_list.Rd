% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compose_data.R
\name{as.data_list}
\alias{as.data_list}
\alias{as.data_list.data.frame}
\alias{as.data_list.data_list}
\alias{as.data_list.default}
\alias{as.data_list.factor}
\alias{as.data_list.list}
\alias{as.data_list.logical}
\alias{as.data_list.numeric}
\title{Convert data into a data_list}
\usage{
as.data_list(object, name = "", ...)
}
\arguments{
\item{object}{The object to convert (see `Details`).}

\item{name}{The name of the element in the returned list corresponding to
this object.}

\item{...}{Additional arguments passed to other implementations of
\code{as.data_list}.}

\item{scalar_as_array}{If \code{TRUE}, returns single scalars as an
1-dimensional array with one element. This is used by
\code{as.data_list.data.frame} to ensure that columns from a data frame with
only one row are still returned as arrays instead of scalars.}

\item{.n_name}{A function that is used to form index variables (a variable
whose value is the length of a factor or a data frame in \code{...}). For
example, if a factor with \code{name = "foo"} (having three levels) is
passed in, the list returned will include an element named
\code{.n_name("foo")}, which by default would be "n_foo", containing the
value 3.}
}
\value{
An object of class \code{c("data_list", "list")}, where each element
is a translated variable as described above.
}
\description{
Used by \code{\link{compose_data}} to create lists of data suitable for
input into a Bayesian sampler.  This typically should not be called directly
(instead use \code{\link{compose_data}}) unless you need to implement your
own conversion routines for a data type not already supported (see
`Details`).
}
\details{
This function recursively translates its first argument into list elements,
concatenating all resulting lists together. By default this means that:
\itemize{ \item numerics are included as-is.  \item logicals are translated
into numeric using \code{\link{as.numeric}}.  \item factors are translated
into numeric using \code{\link{as.numeric}}, and an additional element named
\code{.n_name(name)} is added with the number of levels in the factor.
\item lists are translated by translating all elements of the list
(recursively) and adding them to the result.  \item data.frames are
translated by translating every column of the data.frame and adding them to
the result.  A variable named \code{"n"} (or \code{.n_name(name)} if
\code{name} is not \code{""}) is also added containing the number of rows in
the data frame.  \item all other types are dropped (and a warning given) }
If you wish to add support for additional types not described above, provide
an implementation of \code{\link{as.data_list}} for the type. See the
implementations of \code{as.data_list.numeric}, \code{as.data_list.logical},
etc for examples.
}
\examples{

##TODO

}
\author{
Matthew Kay
}
\seealso{
\code{\link{compose_data}}, \code{\link{extract_samples}}.
}
\keyword{manip}

